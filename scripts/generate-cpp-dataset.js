#!/usr/bin/env node

const child_process = require('node:child_process');
const fs = require('node:fs');
const path = require('node:path');

/**
 * Retrieves JSON dataset and generates CPP header file
 * with static const array of std::tuple instances
 */
function generateCppDataset() {
  /**
   * @type {Array<{ utf8: string; base64: string; hex: string }>}
   */
  const dataset = require('../tests-datasets/dataset.json');

  const contents = [
    '/**',
    ' * This file is autogenerated, do not edit it manually.',
    ' * In order to add new examples, go to `tests-datasets/dataset.json`',
    ' * and later run `scripts/generate-cpp-dataset.js`',
    ' */',
    '#pragma once',
    '',
    '#include <string>',
    '#include <tuple>',
    '',
    '/**',
    ' * First element in tuple is utf8 string,',
    ' * second is its base64-encoded value',
    ' * third is its hex-encoded value',
    ' */',
    'using Dataset = std::tuple<std::string, std::string, std::string>;',
    '',
  ];

  contents.push(
    '// AUTOGENERATED FROM tests-datasets/datasets.json - START',
    ...dataset.map(
      (set, index) => `static const Dataset set${index} = {"${set.utf8}", "${set.base64}", "${set.hex}"};`,
    ),
    '',
  );
  contents.push(
    'static const Dataset dataset[] = {',
    '    ' + dataset.map((_, index) => `set${index}`).join(', '),
    '};',
    '// AUTOGENERATED FROM tests-datasets/datasets.json - END',
    '',
  );

  const fileContent = contents.join('\n');
  const datasetCppFilePath = path.resolve(__dirname, '../native-tests/ReactNativeEncodingDataset.h');

  fs.writeFileSync(datasetCppFilePath, fileContent);

  const result = child_process.spawnSync('clang-format', ['-Werror', '-i', `${datasetCppFilePath}`]);

  if (result.error) {
    console.error(result.error);
    process.exit(1);
  } else {
    console.log('Generated cpp dataset');
  }
}

generateCppDataset();
